name: Deploy Flask App to Azure Web App

on:
  push:
    branches:
      - main

env:
  FLASK_ENV: production
  WEBSITE_HTTPLOGGING_RETENTION_DAYS: 7
  INSTANCE_PATH: '/home/site/wwwroot/instance'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create .env file
      run: |
        echo "AZURE_OPENAI_API_KEY=${{ secrets.AZURE_OPENAI_API_KEY }}" >> .env
        echo "AZURE_OPENAI_ENDPOINT=${{ secrets.AZURE_OPENAI_ENDPOINT }}" >> .env
        echo "DEPLOYMENT_NAME=${{ secrets.DEPLOYMENT_NAME }}" >> .env
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
        echo "FLASK_ENV=production" >> .env

    - name: Create necessary directories
      run: |
        mkdir -p instance
        mkdir -p data
        chmod 777 instance
        chmod 777 data

    - name: Initialize database directory
      run: |
        touch instance/site.db
        chmod 666 instance/site.db

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'EGPT'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: '.'
        
    - name: Post deployment commands
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'EGPT'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        startup-command: |
          mkdir -p /home/site/wwwroot/instance
          chmod 777 /home/site/wwwroot/instance
          touch /home/site/wwwroot/instance/site.db
          chmod 666 /home/site/wwwroot/instance/site.db

    - name: Azure CLI Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure WebApp Restart
      uses: Azure/cli@v1
      with:
        inlineScript: |
          az webapp restart --name EGPT --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }}

    - name: Check deployment status
      run: |
        echo "Deployment completed. Checking application health..."
        sleep 30  # Wait for app to start
        curl -f https://egpt.azurewebsites.net/health || exit 1